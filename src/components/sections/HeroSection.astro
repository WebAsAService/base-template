---
export interface Props {
  config?: any;
}

const { config } = Astro.props;
// Use passed config or fall back to the expected structure
const hero = config || {
  headline: "Welcome to Our Service",
  subheadline: "Professional solutions for your business",
  cta: {
    primary: { text: "Get Started", link: "#contact", style: "primary" },
    secondary: { text: "Learn More", link: "#about", style: "outline" }
  },
  media: {
    type: "image",
    src: "/images/hero-placeholder.jpg",
    alt: "Hero image"
  },
  trustedBy: {
    enabled: false,
    title: "",
    logos: []
  }
};
---

<section class="py-20 bg-gradient-to-r from-primary-50 to-secondary-50">
  <div class="container mx-auto px-4">
    <div class="flex flex-col md:flex-row items-center">
      <!-- Left content - Text -->
      <div class="md:w-1/2 mb-10 md:mb-0 md:pr-10">
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold leading-tight mb-6">
          {hero.headline}
        </h1>
        <p class="text-xl text-gray-600 mb-8">
          {hero.subheadline}
        </p>
        <div class="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4">
          {/* Handle both string and object CTA formats */}
          {typeof hero.cta === 'string' ? (
            <>
              <a href="#contact" class="btn btn-primary">
                {hero.cta}
              </a>
              {hero.secondaryCta && (
                <a href="#about" class="btn btn-outline">
                  {hero.secondaryCta}
                </a>
              )}
            </>
          ) : (
            <>
              <a href={hero.cta?.primary?.link || '#contact'} class={`btn btn-${hero.cta?.primary?.style || 'primary'}`}>
                {hero.cta?.primary?.text || 'Get Started'}
              </a>
              <a href={hero.cta?.secondary?.link || '#about'} class={`btn btn-${hero.cta?.secondary?.style || 'outline'}`}>
                {hero.cta?.secondary?.text || 'Learn More'}
              </a>
            </>
          )}
        </div>
      </div>
      
      <!-- Right content - Image/Video -->
      <div class="md:w-1/2">
        <div class="relative">
          <!-- Main media -->
          <div class="rounded-lg shadow-xl overflow-hidden">
            {/* Handle both simple image and media object formats */}
            {hero.image ? (
              <img 
                src={hero.image} 
                alt="Hero image" 
                class="w-full h-auto"
              />
            ) : hero.media?.type === 'video' ? (
              <video 
                src={hero.media.src}
                poster={hero.media.poster}
                alt={hero.media.alt}
                class="w-full h-auto"
                controls
                preload="metadata"
              />
            ) : (
              <img 
                src={hero.media?.src || '/images/hero-placeholder.jpg'} 
                alt={hero.media?.alt || 'Hero image'} 
                class="w-full h-auto"
              />
            )}
          </div>
          
          <!-- Decorative elements -->
          <div class="absolute -bottom-6 -left-6 w-24 h-24 bg-primary-500 rounded-lg opacity-20"></div>
          <div class="absolute -top-6 -right-6 w-32 h-32 bg-secondary-500 rounded-full opacity-20"></div>
        </div>
      </div>
    </div>
    
    <!-- Trusted by section -->
    {hero.trustedBy?.enabled && hero.trustedBy?.logos?.length > 0 && (
      <div class="mt-20 text-center">
        <p class="text-gray-500 mb-8">{hero.trustedBy.title}</p>
        <div class="flex flex-wrap justify-center items-center gap-8 opacity-70">
          {hero.trustedBy.logos.map((logo) => (
            <img 
              src={logo.src} 
              alt={logo.alt} 
              style={`height: ${logo.height}`}
              class="grayscale hover:grayscale-0 transition-all duration-300"
            />
          ))}
        </div>
      </div>
    )}
  </div>
</section>
